// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.28.1
// source: desc_test1.proto

package testprotos

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Comment for SomeEnum
type SomeEnum int32

const (
	// Comment for SOME_VAL
	SomeEnum_SOME_VAL SomeEnum = 0
	// Comment for ANOTHER_VAL
	SomeEnum_ANOTHER_VAL SomeEnum = 1
	// Comment for YET_ANOTHER_VAL
	SomeEnum_YET_ANOTHER_VAL SomeEnum = 2
)

// Enum value maps for SomeEnum.
var (
	SomeEnum_name = map[int32]string{
		0: "SOME_VAL",
		1: "ANOTHER_VAL",
		2: "YET_ANOTHER_VAL",
	}
	SomeEnum_value = map[string]int32{
		"SOME_VAL":        0,
		"ANOTHER_VAL":     1,
		"YET_ANOTHER_VAL": 2,
	}
)

func (x SomeEnum) Enum() *SomeEnum {
	p := new(SomeEnum)
	*p = x
	return p
}

func (x SomeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SomeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_desc_test1_proto_enumTypes[0].Descriptor()
}

func (SomeEnum) Type() protoreflect.EnumType {
	return &file_desc_test1_proto_enumTypes[0]
}

func (x SomeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SomeEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SomeEnum(num)
	return nil
}

// Deprecated: Use SomeEnum.Descriptor instead.
func (SomeEnum) EnumDescriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0}
}

// Comment for NestedEnum
type TestMessage_NestedEnum int32

const (
	// Comment for VALUE1
	TestMessage_VALUE1 TestMessage_NestedEnum = 1
	// Comment for VALUE2
	TestMessage_VALUE2 TestMessage_NestedEnum = 2
)

// Enum value maps for TestMessage_NestedEnum.
var (
	TestMessage_NestedEnum_name = map[int32]string{
		1: "VALUE1",
		2: "VALUE2",
	}
	TestMessage_NestedEnum_value = map[string]int32{
		"VALUE1": 1,
		"VALUE2": 2,
	}
)

func (x TestMessage_NestedEnum) Enum() *TestMessage_NestedEnum {
	p := new(TestMessage_NestedEnum)
	*p = x
	return p
}

func (x TestMessage_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestMessage_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_desc_test1_proto_enumTypes[1].Descriptor()
}

func (TestMessage_NestedEnum) Type() protoreflect.EnumType {
	return &file_desc_test1_proto_enumTypes[1]
}

func (x TestMessage_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TestMessage_NestedEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TestMessage_NestedEnum(num)
	return nil
}

// Deprecated: Use TestMessage_NestedEnum.Descriptor instead.
func (TestMessage_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0, 0}
}

// Comment for DeeplyNestedEnum
type TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum int32

const (
	// Comment for VALUE1
	TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_VALUE1 TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum = 1
	// Comment for VALUE2
	TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_VALUE2 TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum = 2
)

// Enum value maps for TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum.
var (
	TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum_name = map[int32]string{
		1: "VALUE1",
		2: "VALUE2",
	}
	TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum_value = map[string]int32{
		"VALUE1": 1,
		"VALUE2": 2,
	}
)

func (x TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) Enum() *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum {
	p := new(TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum)
	*p = x
	return p
}

func (x TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_desc_test1_proto_enumTypes[2].Descriptor()
}

func (TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) Type() protoreflect.EnumType {
	return &file_desc_test1_proto_enumTypes[2]
}

func (x TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum(num)
	return nil
}

// Deprecated: Use TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum.Descriptor instead.
func (TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

// Comment for TestMessage
type TestMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for nm
	Nm *TestMessage_NestedMessage `protobuf:"bytes,1,opt,name=nm" json:"nm,omitempty"`
	// Comment for anm
	Anm *TestMessage_NestedMessage_AnotherNestedMessage `protobuf:"bytes,2,opt,name=anm" json:"anm,omitempty"`
	// Comment for yanm
	Yanm *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage `protobuf:"bytes,3,opt,name=yanm" json:"yanm,omitempty"`
	// Comment for ne
	Ne            []TestMessage_NestedEnum `protobuf:"varint,4,rep,name=ne,enum=testprotos.TestMessage_NestedEnum" json:"ne,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMessage) Reset() {
	*x = TestMessage{}
	mi := &file_desc_test1_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMessage) ProtoMessage() {}

func (x *TestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMessage.ProtoReflect.Descriptor instead.
func (*TestMessage) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0}
}

func (x *TestMessage) GetNm() *TestMessage_NestedMessage {
	if x != nil {
		return x.Nm
	}
	return nil
}

func (x *TestMessage) GetAnm() *TestMessage_NestedMessage_AnotherNestedMessage {
	if x != nil {
		return x.Anm
	}
	return nil
}

func (x *TestMessage) GetYanm() *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage {
	if x != nil {
		return x.Yanm
	}
	return nil
}

func (x *TestMessage) GetNe() []TestMessage_NestedEnum {
	if x != nil {
		return x.Ne
	}
	return nil
}

// Comment for AnotherTestMessage
type AnotherTestMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for dne
	Dne *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum `protobuf:"varint,1,opt,name=dne,enum=testprotos.TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum" json:"dne,omitempty"`
	// Comment for map_field1
	MapField1 map[int32]string `protobuf:"bytes,2,rep,name=map_field1,json=mapField1" json:"map_field1,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Comment for map_field2
	MapField2 map[int64]float32 `protobuf:"bytes,3,rep,name=map_field2,json=mapField2" json:"map_field2,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	// Comment for map_field3
	MapField3 map[uint32]bool `protobuf:"bytes,4,rep,name=map_field3,json=mapField3" json:"map_field3,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Comment for map_field4
	MapField4 map[string]*AnotherTestMessage `protobuf:"bytes,5,rep,name=map_field4,json=mapField4" json:"map_field4,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Rocknroll *AnotherTestMessage_RockNRoll  `protobuf:"group,6,opt,name=RockNRoll,json=rocknroll" json:"rocknroll,omitempty"`
	// Comment for atmoo
	//
	// Types that are valid to be assigned to Atmoo:
	//
	//	*AnotherTestMessage_Str
	//	*AnotherTestMessage_Int
	Atmoo isAnotherTestMessage_Atmoo `protobuf_oneof:"atmoo"`
	// Deprecated: Marked as deprecated in desc_test1.proto.
	Withoptions     *AnotherTestMessage_WithOptions `protobuf:"group,9,opt,name=WithOptions,json=withoptions" json:"withoptions,omitempty"`
	extensionFields protoimpl.ExtensionFields
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AnotherTestMessage) Reset() {
	*x = AnotherTestMessage{}
	mi := &file_desc_test1_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnotherTestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnotherTestMessage) ProtoMessage() {}

func (x *AnotherTestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnotherTestMessage.ProtoReflect.Descriptor instead.
func (*AnotherTestMessage) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{1}
}

func (x *AnotherTestMessage) GetDne() TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum {
	if x != nil && x.Dne != nil {
		return *x.Dne
	}
	return TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_VALUE1
}

func (x *AnotherTestMessage) GetMapField1() map[int32]string {
	if x != nil {
		return x.MapField1
	}
	return nil
}

func (x *AnotherTestMessage) GetMapField2() map[int64]float32 {
	if x != nil {
		return x.MapField2
	}
	return nil
}

func (x *AnotherTestMessage) GetMapField3() map[uint32]bool {
	if x != nil {
		return x.MapField3
	}
	return nil
}

func (x *AnotherTestMessage) GetMapField4() map[string]*AnotherTestMessage {
	if x != nil {
		return x.MapField4
	}
	return nil
}

func (x *AnotherTestMessage) GetRocknroll() *AnotherTestMessage_RockNRoll {
	if x != nil {
		return x.Rocknroll
	}
	return nil
}

func (x *AnotherTestMessage) GetAtmoo() isAnotherTestMessage_Atmoo {
	if x != nil {
		return x.Atmoo
	}
	return nil
}

func (x *AnotherTestMessage) GetStr() string {
	if x != nil {
		if x, ok := x.Atmoo.(*AnotherTestMessage_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *AnotherTestMessage) GetInt() int64 {
	if x != nil {
		if x, ok := x.Atmoo.(*AnotherTestMessage_Int); ok {
			return x.Int
		}
	}
	return 0
}

// Deprecated: Marked as deprecated in desc_test1.proto.
func (x *AnotherTestMessage) GetWithoptions() *AnotherTestMessage_WithOptions {
	if x != nil {
		return x.Withoptions
	}
	return nil
}

type isAnotherTestMessage_Atmoo interface {
	isAnotherTestMessage_Atmoo()
}

type AnotherTestMessage_Str struct {
	// Comment for str
	Str string `protobuf:"bytes,7,opt,name=str,oneof"`
}

type AnotherTestMessage_Int struct {
	// Comment for int
	Int int64 `protobuf:"varint,8,opt,name=int,oneof"`
}

func (*AnotherTestMessage_Str) isAnotherTestMessage_Atmoo() {}

func (*AnotherTestMessage_Int) isAnotherTestMessage_Atmoo() {}

// Comment for NestedMessage
type TestMessage_NestedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for anm
	Anm *TestMessage_NestedMessage_AnotherNestedMessage `protobuf:"bytes,1,opt,name=anm" json:"anm,omitempty"`
	// Comment for yanm
	Yanm          *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage `protobuf:"bytes,2,opt,name=yanm" json:"yanm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMessage_NestedMessage) Reset() {
	*x = TestMessage_NestedMessage{}
	mi := &file_desc_test1_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMessage_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMessage_NestedMessage) ProtoMessage() {}

func (x *TestMessage_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMessage_NestedMessage.ProtoReflect.Descriptor instead.
func (*TestMessage_NestedMessage) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestMessage_NestedMessage) GetAnm() *TestMessage_NestedMessage_AnotherNestedMessage {
	if x != nil {
		return x.Anm
	}
	return nil
}

func (x *TestMessage_NestedMessage) GetYanm() *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage {
	if x != nil {
		return x.Yanm
	}
	return nil
}

// Comment for AnotherNestedMessage
type TestMessage_NestedMessage_AnotherNestedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for yanm
	Yanm          []*TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage `protobuf:"bytes,1,rep,name=yanm" json:"yanm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage) Reset() {
	*x = TestMessage_NestedMessage_AnotherNestedMessage{}
	mi := &file_desc_test1_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMessage_NestedMessage_AnotherNestedMessage) ProtoMessage() {}

func (x *TestMessage_NestedMessage_AnotherNestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMessage_NestedMessage_AnotherNestedMessage.ProtoReflect.Descriptor instead.
func (*TestMessage_NestedMessage_AnotherNestedMessage) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage) GetYanm() []*TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage {
	if x != nil {
		return x.Yanm
	}
	return nil
}

// Comment for YetAnotherNestedMessage
type TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for foo
	Foo *string `protobuf:"bytes,1,opt,name=foo" json:"foo,omitempty"`
	// Comment for bar
	Bar *int32 `protobuf:"varint,2,opt,name=bar" json:"bar,omitempty"`
	// Comment for baz
	Baz []byte `protobuf:"bytes,3,opt,name=baz" json:"baz,omitempty"`
	// Comment for dne
	Dne *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum `protobuf:"varint,4,opt,name=dne,enum=testprotos.TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum" json:"dne,omitempty"`
	// Comment for anm
	Anm *TestMessage_NestedMessage_AnotherNestedMessage `protobuf:"bytes,5,opt,name=anm" json:"anm,omitempty"`
	// Comment for nm
	Nm *TestMessage_NestedMessage `protobuf:"bytes,6,opt,name=nm" json:"nm,omitempty"`
	// Comment for tm
	Tm            *TestMessage `protobuf:"bytes,7,opt,name=tm" json:"tm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) Reset() {
	*x = TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage{}
	mi := &file_desc_test1_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) ProtoMessage() {}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage.ProtoReflect.Descriptor instead.
func (*TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetFoo() string {
	if x != nil && x.Foo != nil {
		return *x.Foo
	}
	return ""
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetBar() int32 {
	if x != nil && x.Bar != nil {
		return *x.Bar
	}
	return 0
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetBaz() []byte {
	if x != nil {
		return x.Baz
	}
	return nil
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetDne() TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum {
	if x != nil && x.Dne != nil {
		return *x.Dne
	}
	return TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_VALUE1
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetAnm() *TestMessage_NestedMessage_AnotherNestedMessage {
	if x != nil {
		return x.Anm
	}
	return nil
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetNm() *TestMessage_NestedMessage {
	if x != nil {
		return x.Nm
	}
	return nil
}

func (x *TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage) GetTm() *TestMessage {
	if x != nil {
		return x.Tm
	}
	return nil
}

// Comment for RockNRoll
type AnotherTestMessage_RockNRoll struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Comment for beatles
	Beatles *string `protobuf:"bytes,1,opt,name=beatles" json:"beatles,omitempty"`
	// Comment for stones
	Stones *string `protobuf:"bytes,2,opt,name=stones" json:"stones,omitempty"`
	// Comment for doors
	Doors         *string `protobuf:"bytes,3,opt,name=doors" json:"doors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnotherTestMessage_RockNRoll) Reset() {
	*x = AnotherTestMessage_RockNRoll{}
	mi := &file_desc_test1_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnotherTestMessage_RockNRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnotherTestMessage_RockNRoll) ProtoMessage() {}

func (x *AnotherTestMessage_RockNRoll) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnotherTestMessage_RockNRoll.ProtoReflect.Descriptor instead.
func (*AnotherTestMessage_RockNRoll) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{1, 4}
}

func (x *AnotherTestMessage_RockNRoll) GetBeatles() string {
	if x != nil && x.Beatles != nil {
		return *x.Beatles
	}
	return ""
}

func (x *AnotherTestMessage_RockNRoll) GetStones() string {
	if x != nil && x.Stones != nil {
		return *x.Stones
	}
	return ""
}

func (x *AnotherTestMessage_RockNRoll) GetDoors() string {
	if x != nil && x.Doors != nil {
		return *x.Doors
	}
	return ""
}

// Comment for WithOptions
type AnotherTestMessage_WithOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnotherTestMessage_WithOptions) Reset() {
	*x = AnotherTestMessage_WithOptions{}
	mi := &file_desc_test1_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnotherTestMessage_WithOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnotherTestMessage_WithOptions) ProtoMessage() {}

func (x *AnotherTestMessage_WithOptions) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test1_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnotherTestMessage_WithOptions.ProtoReflect.Descriptor instead.
func (*AnotherTestMessage_WithOptions) Descriptor() ([]byte, []int) {
	return file_desc_test1_proto_rawDescGZIP(), []int{1, 5}
}

var file_desc_test1_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*AnotherTestMessage)(nil),
		ExtensionType: (*TestMessage)(nil),
		Field:         100,
		Name:          "testprotos.xtm",
		Tag:           "bytes,100,opt,name=xtm",
		Filename:      "desc_test1.proto",
	},
	{
		ExtendedType:  (*AnotherTestMessage)(nil),
		ExtensionType: (*string)(nil),
		Field:         101,
		Name:          "testprotos.xs",
		Tag:           "bytes,101,opt,name=xs",
		Filename:      "desc_test1.proto",
	},
	{
		ExtendedType:  (*AnotherTestMessage)(nil),
		ExtensionType: (*int32)(nil),
		Field:         102,
		Name:          "testprotos.xi",
		Tag:           "varint,102,opt,name=xi",
		Filename:      "desc_test1.proto",
	},
	{
		ExtendedType:  (*AnotherTestMessage)(nil),
		ExtensionType: (*uint64)(nil),
		Field:         103,
		Name:          "testprotos.xui",
		Tag:           "varint,103,opt,name=xui",
		Filename:      "desc_test1.proto",
	},
	{
		ExtendedType:  (*AnotherTestMessage)(nil),
		ExtensionType: ([]bool)(nil),
		Field:         200,
		Name:          "testprotos.TestMessage.NestedMessage.AnotherNestedMessage.flags",
		Tag:           "varint,200,rep,packed,name=flags",
		Filename:      "desc_test1.proto",
	},
}

// Extension fields to AnotherTestMessage.
var (
	// Comment for xtm
	//
	// optional testprotos.TestMessage xtm = 100;
	E_Xtm = &file_desc_test1_proto_extTypes[0]
	// Comment for xs
	//
	// optional string xs = 101;
	E_Xs = &file_desc_test1_proto_extTypes[1]
	// Comment for xi
	//
	// optional int32 xi = 102;
	E_Xi = &file_desc_test1_proto_extTypes[2]
	// Comment for xui
	//
	// optional uint64 xui = 103;
	E_Xui = &file_desc_test1_proto_extTypes[3]
	// Comment for flags
	//
	// repeated bool flags = 200;
	E_TestMessage_NestedMessage_AnotherNestedMessage_Flags = &file_desc_test1_proto_extTypes[4]
)

var File_desc_test1_proto protoreflect.FileDescriptor

const file_desc_test1_proto_rawDesc = "" +
	"\n" +
	"\x10desc_test1.proto\x12\n" +
	"testprotos\"\xfb\b\n" +
	"\vTestMessage\x125\n" +
	"\x02nm\x18\x01 \x01(\v2%.testprotos.TestMessage.NestedMessageR\x02nm\x12L\n" +
	"\x03anm\x18\x02 \x01(\v2:.testprotos.TestMessage.NestedMessage.AnotherNestedMessageR\x03anm\x12f\n" +
	"\x04yanm\x18\x03 \x01(\v2R.testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessageR\x04yanm\x122\n" +
	"\x02ne\x18\x04 \x03(\x0e2\".testprotos.TestMessage.NestedEnumR\x02ne\x1a\xa4\x06\n" +
	"\rNestedMessage\x12L\n" +
	"\x03anm\x18\x01 \x01(\v2:.testprotos.TestMessage.NestedMessage.AnotherNestedMessageR\x03anm\x12f\n" +
	"\x04yanm\x18\x02 \x01(\v2R.testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessageR\x04yanm\x1a\xdc\x04\n" +
	"\x14AnotherNestedMessage\x12f\n" +
	"\x04yanm\x18\x01 \x03(\v2R.testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessageR\x04yanm\x1a\xa0\x03\n" +
	"\x17YetAnotherNestedMessage\x12\x10\n" +
	"\x03foo\x18\x01 \x01(\tR\x03foo\x12\x10\n" +
	"\x03bar\x18\x02 \x01(\x05R\x03bar\x12\x10\n" +
	"\x03baz\x18\x03 \x01(\fR\x03baz\x12u\n" +
	"\x03dne\x18\x04 \x01(\x0e2c.testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.DeeplyNestedEnumR\x03dne\x12L\n" +
	"\x03anm\x18\x05 \x01(\v2:.testprotos.TestMessage.NestedMessage.AnotherNestedMessageR\x03anm\x125\n" +
	"\x02nm\x18\x06 \x01(\v2%.testprotos.TestMessage.NestedMessageR\x02nm\x12'\n" +
	"\x02tm\x18\a \x01(\v2\x17.testprotos.TestMessageR\x02tm\"*\n" +
	"\x10DeeplyNestedEnum\x12\n" +
	"\n" +
	"\x06VALUE1\x10\x01\x12\n" +
	"\n" +
	"\x06VALUE2\x10\x0229\n" +
	"\x05flags\x12\x1e.testprotos.AnotherTestMessage\x18\xc8\x01 \x03(\bB\x02\x10\x01R\x05flags\"$\n" +
	"\n" +
	"NestedEnum\x12\n" +
	"\n" +
	"\x06VALUE1\x10\x01\x12\n" +
	"\n" +
	"\x06VALUE2\x10\x02\"\x91\b\n" +
	"\x12AnotherTestMessage\x12u\n" +
	"\x03dne\x18\x01 \x01(\x0e2c.testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.DeeplyNestedEnumR\x03dne\x12L\n" +
	"\n" +
	"map_field1\x18\x02 \x03(\v2-.testprotos.AnotherTestMessage.MapField1EntryR\tmapField1\x12L\n" +
	"\n" +
	"map_field2\x18\x03 \x03(\v2-.testprotos.AnotherTestMessage.MapField2EntryR\tmapField2\x12L\n" +
	"\n" +
	"map_field3\x18\x04 \x03(\v2-.testprotos.AnotherTestMessage.MapField3EntryR\tmapField3\x12L\n" +
	"\n" +
	"map_field4\x18\x05 \x03(\v2-.testprotos.AnotherTestMessage.MapField4EntryR\tmapField4\x12F\n" +
	"\trocknroll\x18\x06 \x01(\n" +
	"2(.testprotos.AnotherTestMessage.RockNRollR\trocknroll\x12\x12\n" +
	"\x03str\x18\a \x01(\tH\x00R\x03str\x12\x12\n" +
	"\x03int\x18\b \x01(\x03H\x00R\x03int\x12P\n" +
	"\vwithoptions\x18\t \x01(\n" +
	"2*.testprotos.AnotherTestMessage.WithOptionsB\x02\x18\x01R\vwithoptions\x1a<\n" +
	"\x0eMapField1Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eMapField2Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a<\n" +
	"\x0eMapField3Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a\\\n" +
	"\x0eMapField4Entry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.testprotos.AnotherTestMessageR\x05value:\x028\x01\x1aS\n" +
	"\tRockNRoll\x12\x18\n" +
	"\abeatles\x18\x01 \x01(\tR\abeatles\x12\x16\n" +
	"\x06stones\x18\x02 \x01(\tR\x06stones\x12\x14\n" +
	"\x05doors\x18\x03 \x01(\tR\x05doors\x1a\r\n" +
	"\vWithOptions*\x05\bd\x10\xc9\x01B\a\n" +
	"\x05atmoo*>\n" +
	"\bSomeEnum\x12\f\n" +
	"\bSOME_VAL\x10\x00\x12\x0f\n" +
	"\vANOTHER_VAL\x10\x01\x12\x13\n" +
	"\x0fYET_ANOTHER_VAL\x10\x022\xa0\x01\n" +
	"\vSomeService\x12>\n" +
	"\n" +
	"SomeMethod\x12\x17.testprotos.TestMessage\x1a\x17.testprotos.TestMessage\x12Q\n" +
	"\x0fSomeOtherMethod\x12\x1e.testprotos.AnotherTestMessage\x1a\x1e.testprotos.AnotherTestMessage:I\n" +
	"\x03xtm\x12\x1e.testprotos.AnotherTestMessage\x18d \x01(\v2\x17.testprotos.TestMessageR\x03xtm:.\n" +
	"\x02xs\x12\x1e.testprotos.AnotherTestMessage\x18e \x01(\tR\x02xs:.\n" +
	"\x02xi\x12\x1e.testprotos.AnotherTestMessage\x18f \x01(\x05R\x02xi:0\n" +
	"\x03xui\x12\x1e.testprotos.AnotherTestMessage\x18g \x01(\x04R\x03xuiB6Z4github.com/jhump/protoreflect/v2/internal/testprotos"

var (
	file_desc_test1_proto_rawDescOnce sync.Once
	file_desc_test1_proto_rawDescData []byte
)

func file_desc_test1_proto_rawDescGZIP() []byte {
	file_desc_test1_proto_rawDescOnce.Do(func() {
		file_desc_test1_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_desc_test1_proto_rawDesc), len(file_desc_test1_proto_rawDesc)))
	})
	return file_desc_test1_proto_rawDescData
}

var file_desc_test1_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_desc_test1_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_desc_test1_proto_goTypes = []any{
	(SomeEnum)(0),               // 0: testprotos.SomeEnum
	(TestMessage_NestedEnum)(0), // 1: testprotos.TestMessage.NestedEnum
	(TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage_DeeplyNestedEnum)(0), // 2: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.DeeplyNestedEnum
	(*TestMessage)(nil),                                    // 3: testprotos.TestMessage
	(*AnotherTestMessage)(nil),                             // 4: testprotos.AnotherTestMessage
	(*TestMessage_NestedMessage)(nil),                      // 5: testprotos.TestMessage.NestedMessage
	(*TestMessage_NestedMessage_AnotherNestedMessage)(nil), // 6: testprotos.TestMessage.NestedMessage.AnotherNestedMessage
	(*TestMessage_NestedMessage_AnotherNestedMessage_YetAnotherNestedMessage)(nil), // 7: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage
	nil,                                    // 8: testprotos.AnotherTestMessage.MapField1Entry
	nil,                                    // 9: testprotos.AnotherTestMessage.MapField2Entry
	nil,                                    // 10: testprotos.AnotherTestMessage.MapField3Entry
	nil,                                    // 11: testprotos.AnotherTestMessage.MapField4Entry
	(*AnotherTestMessage_RockNRoll)(nil),   // 12: testprotos.AnotherTestMessage.RockNRoll
	(*AnotherTestMessage_WithOptions)(nil), // 13: testprotos.AnotherTestMessage.WithOptions
}
var file_desc_test1_proto_depIdxs = []int32{
	5,  // 0: testprotos.TestMessage.nm:type_name -> testprotos.TestMessage.NestedMessage
	6,  // 1: testprotos.TestMessage.anm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage
	7,  // 2: testprotos.TestMessage.yanm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage
	1,  // 3: testprotos.TestMessage.ne:type_name -> testprotos.TestMessage.NestedEnum
	2,  // 4: testprotos.AnotherTestMessage.dne:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.DeeplyNestedEnum
	8,  // 5: testprotos.AnotherTestMessage.map_field1:type_name -> testprotos.AnotherTestMessage.MapField1Entry
	9,  // 6: testprotos.AnotherTestMessage.map_field2:type_name -> testprotos.AnotherTestMessage.MapField2Entry
	10, // 7: testprotos.AnotherTestMessage.map_field3:type_name -> testprotos.AnotherTestMessage.MapField3Entry
	11, // 8: testprotos.AnotherTestMessage.map_field4:type_name -> testprotos.AnotherTestMessage.MapField4Entry
	12, // 9: testprotos.AnotherTestMessage.rocknroll:type_name -> testprotos.AnotherTestMessage.RockNRoll
	13, // 10: testprotos.AnotherTestMessage.withoptions:type_name -> testprotos.AnotherTestMessage.WithOptions
	6,  // 11: testprotos.TestMessage.NestedMessage.anm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage
	7,  // 12: testprotos.TestMessage.NestedMessage.yanm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage
	7,  // 13: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.yanm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage
	2,  // 14: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.dne:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.DeeplyNestedEnum
	6,  // 15: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.anm:type_name -> testprotos.TestMessage.NestedMessage.AnotherNestedMessage
	5,  // 16: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.nm:type_name -> testprotos.TestMessage.NestedMessage
	3,  // 17: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.YetAnotherNestedMessage.tm:type_name -> testprotos.TestMessage
	4,  // 18: testprotos.AnotherTestMessage.MapField4Entry.value:type_name -> testprotos.AnotherTestMessage
	4,  // 19: testprotos.xtm:extendee -> testprotos.AnotherTestMessage
	4,  // 20: testprotos.xs:extendee -> testprotos.AnotherTestMessage
	4,  // 21: testprotos.xi:extendee -> testprotos.AnotherTestMessage
	4,  // 22: testprotos.xui:extendee -> testprotos.AnotherTestMessage
	4,  // 23: testprotos.TestMessage.NestedMessage.AnotherNestedMessage.flags:extendee -> testprotos.AnotherTestMessage
	3,  // 24: testprotos.xtm:type_name -> testprotos.TestMessage
	3,  // 25: testprotos.SomeService.SomeMethod:input_type -> testprotos.TestMessage
	4,  // 26: testprotos.SomeService.SomeOtherMethod:input_type -> testprotos.AnotherTestMessage
	3,  // 27: testprotos.SomeService.SomeMethod:output_type -> testprotos.TestMessage
	4,  // 28: testprotos.SomeService.SomeOtherMethod:output_type -> testprotos.AnotherTestMessage
	27, // [27:29] is the sub-list for method output_type
	25, // [25:27] is the sub-list for method input_type
	24, // [24:25] is the sub-list for extension type_name
	19, // [19:24] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_desc_test1_proto_init() }
func file_desc_test1_proto_init() {
	if File_desc_test1_proto != nil {
		return
	}
	file_desc_test1_proto_msgTypes[1].OneofWrappers = []any{
		(*AnotherTestMessage_Str)(nil),
		(*AnotherTestMessage_Int)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_desc_test1_proto_rawDesc), len(file_desc_test1_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 5,
			NumServices:   1,
		},
		GoTypes:           file_desc_test1_proto_goTypes,
		DependencyIndexes: file_desc_test1_proto_depIdxs,
		EnumInfos:         file_desc_test1_proto_enumTypes,
		MessageInfos:      file_desc_test1_proto_msgTypes,
		ExtensionInfos:    file_desc_test1_proto_extTypes,
	}.Build()
	File_desc_test1_proto = out.File
	file_desc_test1_proto_goTypes = nil
	file_desc_test1_proto_depIdxs = nil
}
