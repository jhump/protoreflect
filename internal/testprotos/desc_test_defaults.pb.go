// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.28.1
// source: desc_test_defaults.proto

package testprotos

import (
	math "math"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Color int32

const (
	Color_RED   Color = 0
	Color_GREEN Color = 1
	Color_BLUE  Color = 2
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "RED",
		1: "GREEN",
		2: "BLUE",
	}
	Color_value = map[string]int32{
		"RED":   0,
		"GREEN": 1,
		"BLUE":  2,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_desc_test_defaults_proto_enumTypes[0].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_desc_test_defaults_proto_enumTypes[0]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Color) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Color(num)
	return nil
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{0}
}

type Number int32

const (
	Number_ZERO Number = 0
	Number_ZED  Number = 0
	Number_NIL  Number = 0
	Number_NULL Number = 0
	Number_ONE  Number = 1
	Number_UNO  Number = 1
	Number_TWO  Number = 2
	Number_DOS  Number = 2
)

// Enum value maps for Number.
var (
	Number_name = map[int32]string{
		0: "ZERO",
		// Duplicate value: 0: "ZED",
		// Duplicate value: 0: "NIL",
		// Duplicate value: 0: "NULL",
		1: "ONE",
		// Duplicate value: 1: "UNO",
		2: "TWO",
		// Duplicate value: 2: "DOS",
	}
	Number_value = map[string]int32{
		"ZERO": 0,
		"ZED":  0,
		"NIL":  0,
		"NULL": 0,
		"ONE":  1,
		"UNO":  1,
		"TWO":  2,
		"DOS":  2,
	}
)

func (x Number) Enum() *Number {
	p := new(Number)
	*p = x
	return p
}

func (x Number) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Number) Descriptor() protoreflect.EnumDescriptor {
	return file_desc_test_defaults_proto_enumTypes[1].Descriptor()
}

func (Number) Type() protoreflect.EnumType {
	return &file_desc_test_defaults_proto_enumTypes[1]
}

func (x Number) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Number) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Number(num)
	return nil
}

// Deprecated: Use Number.Descriptor instead.
func (Number) EnumDescriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{1}
}

type PrimitiveDefaults struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// simple default
	Fl32 *float32 `protobuf:"fixed32,1,opt,name=fl32,def=3.14159" json:"fl32,omitempty"`
	Fl64 *float64 `protobuf:"fixed64,2,opt,name=fl64,def=3.14159" json:"fl64,omitempty"`
	// exponent notation
	Fl32D *float32 `protobuf:"fixed32,3,opt,name=fl32d,def=6.022141e+23" json:"fl32d,omitempty"`
	Fl64D *float64 `protobuf:"fixed64,4,opt,name=fl64d,def=6.022140857e+23" json:"fl64d,omitempty"`
	// special values: inf, -inf, and nan
	Fl32Inf    *float32 `protobuf:"fixed32,5,opt,name=fl32inf,def=inf" json:"fl32inf,omitempty"`
	Fl64Inf    *float64 `protobuf:"fixed64,6,opt,name=fl64inf,def=inf" json:"fl64inf,omitempty"`
	Fl32NegInf *float32 `protobuf:"fixed32,7,opt,name=fl32negInf,def=-inf" json:"fl32negInf,omitempty"`
	Fl64NegInf *float64 `protobuf:"fixed64,8,opt,name=fl64negInf,def=-inf" json:"fl64negInf,omitempty"`
	Fl32Nan    *float32 `protobuf:"fixed32,9,opt,name=fl32nan,def=nan" json:"fl32nan,omitempty"`
	Fl64Nan    *float64 `protobuf:"fixed64,10,opt,name=fl64nan,def=nan" json:"fl64nan,omitempty"`
	Bl1        *bool    `protobuf:"varint,11,opt,name=bl1,def=1" json:"bl1,omitempty"`
	Bl2        *bool    `protobuf:"varint,12,opt,name=bl2,def=0" json:"bl2,omitempty"`
	// signed
	I32    *int32 `protobuf:"varint,13,opt,name=i32,def=10101" json:"i32,omitempty"`
	I32N   *int32 `protobuf:"varint,14,opt,name=i32n,def=-10101" json:"i32n,omitempty"`
	I32X   *int32 `protobuf:"varint,15,opt,name=i32x,def=131586" json:"i32x,omitempty"`
	I32Xn  *int32 `protobuf:"varint,16,opt,name=i32xn,def=-131586" json:"i32xn,omitempty"`
	I64    *int64 `protobuf:"varint,17,opt,name=i64,def=10101" json:"i64,omitempty"`
	I64N   *int64 `protobuf:"varint,18,opt,name=i64n,def=-10101" json:"i64n,omitempty"`
	I64X   *int64 `protobuf:"varint,19,opt,name=i64x,def=131586" json:"i64x,omitempty"`
	I64Xn  *int64 `protobuf:"varint,20,opt,name=i64xn,def=-131586" json:"i64xn,omitempty"`
	I32S   *int32 `protobuf:"zigzag32,21,opt,name=i32s,def=10101" json:"i32s,omitempty"`
	I32Sn  *int32 `protobuf:"zigzag32,22,opt,name=i32sn,def=-10101" json:"i32sn,omitempty"`
	I32Sx  *int32 `protobuf:"zigzag32,23,opt,name=i32sx,def=131586" json:"i32sx,omitempty"`
	I32Sxn *int32 `protobuf:"zigzag32,24,opt,name=i32sxn,def=-131586" json:"i32sxn,omitempty"`
	I64S   *int64 `protobuf:"zigzag64,25,opt,name=i64s,def=10101" json:"i64s,omitempty"`
	I64Sn  *int64 `protobuf:"zigzag64,26,opt,name=i64sn,def=-10101" json:"i64sn,omitempty"`
	I64Sx  *int64 `protobuf:"zigzag64,27,opt,name=i64sx,def=131586" json:"i64sx,omitempty"`
	I64Sxn *int64 `protobuf:"zigzag64,28,opt,name=i64sxn,def=-131586" json:"i64sxn,omitempty"`
	I32F   *int32 `protobuf:"fixed32,29,opt,name=i32f,def=10101" json:"i32f,omitempty"`
	I32Fn  *int32 `protobuf:"fixed32,30,opt,name=i32fn,def=-10101" json:"i32fn,omitempty"`
	I32Fx  *int32 `protobuf:"fixed32,31,opt,name=i32fx,def=131586" json:"i32fx,omitempty"`
	I32Fxn *int32 `protobuf:"fixed32,32,opt,name=i32fxn,def=-131586" json:"i32fxn,omitempty"`
	I64F   *int64 `protobuf:"fixed64,33,opt,name=i64f,def=10101" json:"i64f,omitempty"`
	I64Fn  *int64 `protobuf:"fixed64,34,opt,name=i64fn,def=-10101" json:"i64fn,omitempty"`
	I64Fx  *int64 `protobuf:"fixed64,35,opt,name=i64fx,def=131586" json:"i64fx,omitempty"`
	I64Fxn *int64 `protobuf:"fixed64,36,opt,name=i64fxn,def=-131586" json:"i64fxn,omitempty"`
	// unsigned
	U32           *uint32 `protobuf:"varint,37,opt,name=u32,def=10101" json:"u32,omitempty"`
	U32X          *uint32 `protobuf:"varint,38,opt,name=u32x,def=131586" json:"u32x,omitempty"`
	U64           *uint64 `protobuf:"varint,39,opt,name=u64,def=10101" json:"u64,omitempty"`
	U64X          *uint64 `protobuf:"varint,40,opt,name=u64x,def=131586" json:"u64x,omitempty"`
	U32F          *uint32 `protobuf:"fixed32,41,opt,name=u32f,def=10101" json:"u32f,omitempty"`
	U32Fx         *uint32 `protobuf:"fixed32,42,opt,name=u32fx,def=131586" json:"u32fx,omitempty"`
	U64F          *uint64 `protobuf:"fixed64,43,opt,name=u64f,def=10101" json:"u64f,omitempty"`
	U64Fx         *uint64 `protobuf:"fixed64,44,opt,name=u64fx,def=131586" json:"u64fx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for PrimitiveDefaults fields.
const (
	Default_PrimitiveDefaults_Fl32   = float32(3.141590118408203)
	Default_PrimitiveDefaults_Fl64   = float64(3.14159)
	Default_PrimitiveDefaults_Fl32D  = float32(6.022141003837819e+23)
	Default_PrimitiveDefaults_Fl64D  = float64(6.022140857e+23)
	Default_PrimitiveDefaults_Bl1    = bool(true)
	Default_PrimitiveDefaults_Bl2    = bool(false)
	Default_PrimitiveDefaults_I32    = int32(10101)
	Default_PrimitiveDefaults_I32N   = int32(-10101)
	Default_PrimitiveDefaults_I32X   = int32(131586)
	Default_PrimitiveDefaults_I32Xn  = int32(-131586)
	Default_PrimitiveDefaults_I64    = int64(10101)
	Default_PrimitiveDefaults_I64N   = int64(-10101)
	Default_PrimitiveDefaults_I64X   = int64(131586)
	Default_PrimitiveDefaults_I64Xn  = int64(-131586)
	Default_PrimitiveDefaults_I32S   = int32(10101)
	Default_PrimitiveDefaults_I32Sn  = int32(-10101)
	Default_PrimitiveDefaults_I32Sx  = int32(131586)
	Default_PrimitiveDefaults_I32Sxn = int32(-131586)
	Default_PrimitiveDefaults_I64S   = int64(10101)
	Default_PrimitiveDefaults_I64Sn  = int64(-10101)
	Default_PrimitiveDefaults_I64Sx  = int64(131586)
	Default_PrimitiveDefaults_I64Sxn = int64(-131586)
	Default_PrimitiveDefaults_I32F   = int32(10101)
	Default_PrimitiveDefaults_I32Fn  = int32(-10101)
	Default_PrimitiveDefaults_I32Fx  = int32(131586)
	Default_PrimitiveDefaults_I32Fxn = int32(-131586)
	Default_PrimitiveDefaults_I64F   = int64(10101)
	Default_PrimitiveDefaults_I64Fn  = int64(-10101)
	Default_PrimitiveDefaults_I64Fx  = int64(131586)
	Default_PrimitiveDefaults_I64Fxn = int64(-131586)
	Default_PrimitiveDefaults_U32    = uint32(10101)
	Default_PrimitiveDefaults_U32X   = uint32(131586)
	Default_PrimitiveDefaults_U64    = uint64(10101)
	Default_PrimitiveDefaults_U64X   = uint64(131586)
	Default_PrimitiveDefaults_U32F   = uint32(10101)
	Default_PrimitiveDefaults_U32Fx  = uint32(131586)
	Default_PrimitiveDefaults_U64F   = uint64(10101)
	Default_PrimitiveDefaults_U64Fx  = uint64(131586)
)

// Default values for PrimitiveDefaults fields.
var (
	Default_PrimitiveDefaults_Fl32Inf    = float32(math.Inf(+1))
	Default_PrimitiveDefaults_Fl64Inf    = float64(math.Inf(+1))
	Default_PrimitiveDefaults_Fl32NegInf = float32(math.Inf(-1))
	Default_PrimitiveDefaults_Fl64NegInf = float64(math.Inf(-1))
	Default_PrimitiveDefaults_Fl32Nan    = float32(math.NaN())
	Default_PrimitiveDefaults_Fl64Nan    = float64(math.NaN())
)

func (x *PrimitiveDefaults) Reset() {
	*x = PrimitiveDefaults{}
	mi := &file_desc_test_defaults_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimitiveDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimitiveDefaults) ProtoMessage() {}

func (x *PrimitiveDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test_defaults_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimitiveDefaults.ProtoReflect.Descriptor instead.
func (*PrimitiveDefaults) Descriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{0}
}

func (x *PrimitiveDefaults) GetFl32() float32 {
	if x != nil && x.Fl32 != nil {
		return *x.Fl32
	}
	return Default_PrimitiveDefaults_Fl32
}

func (x *PrimitiveDefaults) GetFl64() float64 {
	if x != nil && x.Fl64 != nil {
		return *x.Fl64
	}
	return Default_PrimitiveDefaults_Fl64
}

func (x *PrimitiveDefaults) GetFl32D() float32 {
	if x != nil && x.Fl32D != nil {
		return *x.Fl32D
	}
	return Default_PrimitiveDefaults_Fl32D
}

func (x *PrimitiveDefaults) GetFl64D() float64 {
	if x != nil && x.Fl64D != nil {
		return *x.Fl64D
	}
	return Default_PrimitiveDefaults_Fl64D
}

func (x *PrimitiveDefaults) GetFl32Inf() float32 {
	if x != nil && x.Fl32Inf != nil {
		return *x.Fl32Inf
	}
	return Default_PrimitiveDefaults_Fl32Inf
}

func (x *PrimitiveDefaults) GetFl64Inf() float64 {
	if x != nil && x.Fl64Inf != nil {
		return *x.Fl64Inf
	}
	return Default_PrimitiveDefaults_Fl64Inf
}

func (x *PrimitiveDefaults) GetFl32NegInf() float32 {
	if x != nil && x.Fl32NegInf != nil {
		return *x.Fl32NegInf
	}
	return Default_PrimitiveDefaults_Fl32NegInf
}

func (x *PrimitiveDefaults) GetFl64NegInf() float64 {
	if x != nil && x.Fl64NegInf != nil {
		return *x.Fl64NegInf
	}
	return Default_PrimitiveDefaults_Fl64NegInf
}

func (x *PrimitiveDefaults) GetFl32Nan() float32 {
	if x != nil && x.Fl32Nan != nil {
		return *x.Fl32Nan
	}
	return Default_PrimitiveDefaults_Fl32Nan
}

func (x *PrimitiveDefaults) GetFl64Nan() float64 {
	if x != nil && x.Fl64Nan != nil {
		return *x.Fl64Nan
	}
	return Default_PrimitiveDefaults_Fl64Nan
}

func (x *PrimitiveDefaults) GetBl1() bool {
	if x != nil && x.Bl1 != nil {
		return *x.Bl1
	}
	return Default_PrimitiveDefaults_Bl1
}

func (x *PrimitiveDefaults) GetBl2() bool {
	if x != nil && x.Bl2 != nil {
		return *x.Bl2
	}
	return Default_PrimitiveDefaults_Bl2
}

func (x *PrimitiveDefaults) GetI32() int32 {
	if x != nil && x.I32 != nil {
		return *x.I32
	}
	return Default_PrimitiveDefaults_I32
}

func (x *PrimitiveDefaults) GetI32N() int32 {
	if x != nil && x.I32N != nil {
		return *x.I32N
	}
	return Default_PrimitiveDefaults_I32N
}

func (x *PrimitiveDefaults) GetI32X() int32 {
	if x != nil && x.I32X != nil {
		return *x.I32X
	}
	return Default_PrimitiveDefaults_I32X
}

func (x *PrimitiveDefaults) GetI32Xn() int32 {
	if x != nil && x.I32Xn != nil {
		return *x.I32Xn
	}
	return Default_PrimitiveDefaults_I32Xn
}

func (x *PrimitiveDefaults) GetI64() int64 {
	if x != nil && x.I64 != nil {
		return *x.I64
	}
	return Default_PrimitiveDefaults_I64
}

func (x *PrimitiveDefaults) GetI64N() int64 {
	if x != nil && x.I64N != nil {
		return *x.I64N
	}
	return Default_PrimitiveDefaults_I64N
}

func (x *PrimitiveDefaults) GetI64X() int64 {
	if x != nil && x.I64X != nil {
		return *x.I64X
	}
	return Default_PrimitiveDefaults_I64X
}

func (x *PrimitiveDefaults) GetI64Xn() int64 {
	if x != nil && x.I64Xn != nil {
		return *x.I64Xn
	}
	return Default_PrimitiveDefaults_I64Xn
}

func (x *PrimitiveDefaults) GetI32S() int32 {
	if x != nil && x.I32S != nil {
		return *x.I32S
	}
	return Default_PrimitiveDefaults_I32S
}

func (x *PrimitiveDefaults) GetI32Sn() int32 {
	if x != nil && x.I32Sn != nil {
		return *x.I32Sn
	}
	return Default_PrimitiveDefaults_I32Sn
}

func (x *PrimitiveDefaults) GetI32Sx() int32 {
	if x != nil && x.I32Sx != nil {
		return *x.I32Sx
	}
	return Default_PrimitiveDefaults_I32Sx
}

func (x *PrimitiveDefaults) GetI32Sxn() int32 {
	if x != nil && x.I32Sxn != nil {
		return *x.I32Sxn
	}
	return Default_PrimitiveDefaults_I32Sxn
}

func (x *PrimitiveDefaults) GetI64S() int64 {
	if x != nil && x.I64S != nil {
		return *x.I64S
	}
	return Default_PrimitiveDefaults_I64S
}

func (x *PrimitiveDefaults) GetI64Sn() int64 {
	if x != nil && x.I64Sn != nil {
		return *x.I64Sn
	}
	return Default_PrimitiveDefaults_I64Sn
}

func (x *PrimitiveDefaults) GetI64Sx() int64 {
	if x != nil && x.I64Sx != nil {
		return *x.I64Sx
	}
	return Default_PrimitiveDefaults_I64Sx
}

func (x *PrimitiveDefaults) GetI64Sxn() int64 {
	if x != nil && x.I64Sxn != nil {
		return *x.I64Sxn
	}
	return Default_PrimitiveDefaults_I64Sxn
}

func (x *PrimitiveDefaults) GetI32F() int32 {
	if x != nil && x.I32F != nil {
		return *x.I32F
	}
	return Default_PrimitiveDefaults_I32F
}

func (x *PrimitiveDefaults) GetI32Fn() int32 {
	if x != nil && x.I32Fn != nil {
		return *x.I32Fn
	}
	return Default_PrimitiveDefaults_I32Fn
}

func (x *PrimitiveDefaults) GetI32Fx() int32 {
	if x != nil && x.I32Fx != nil {
		return *x.I32Fx
	}
	return Default_PrimitiveDefaults_I32Fx
}

func (x *PrimitiveDefaults) GetI32Fxn() int32 {
	if x != nil && x.I32Fxn != nil {
		return *x.I32Fxn
	}
	return Default_PrimitiveDefaults_I32Fxn
}

func (x *PrimitiveDefaults) GetI64F() int64 {
	if x != nil && x.I64F != nil {
		return *x.I64F
	}
	return Default_PrimitiveDefaults_I64F
}

func (x *PrimitiveDefaults) GetI64Fn() int64 {
	if x != nil && x.I64Fn != nil {
		return *x.I64Fn
	}
	return Default_PrimitiveDefaults_I64Fn
}

func (x *PrimitiveDefaults) GetI64Fx() int64 {
	if x != nil && x.I64Fx != nil {
		return *x.I64Fx
	}
	return Default_PrimitiveDefaults_I64Fx
}

func (x *PrimitiveDefaults) GetI64Fxn() int64 {
	if x != nil && x.I64Fxn != nil {
		return *x.I64Fxn
	}
	return Default_PrimitiveDefaults_I64Fxn
}

func (x *PrimitiveDefaults) GetU32() uint32 {
	if x != nil && x.U32 != nil {
		return *x.U32
	}
	return Default_PrimitiveDefaults_U32
}

func (x *PrimitiveDefaults) GetU32X() uint32 {
	if x != nil && x.U32X != nil {
		return *x.U32X
	}
	return Default_PrimitiveDefaults_U32X
}

func (x *PrimitiveDefaults) GetU64() uint64 {
	if x != nil && x.U64 != nil {
		return *x.U64
	}
	return Default_PrimitiveDefaults_U64
}

func (x *PrimitiveDefaults) GetU64X() uint64 {
	if x != nil && x.U64X != nil {
		return *x.U64X
	}
	return Default_PrimitiveDefaults_U64X
}

func (x *PrimitiveDefaults) GetU32F() uint32 {
	if x != nil && x.U32F != nil {
		return *x.U32F
	}
	return Default_PrimitiveDefaults_U32F
}

func (x *PrimitiveDefaults) GetU32Fx() uint32 {
	if x != nil && x.U32Fx != nil {
		return *x.U32Fx
	}
	return Default_PrimitiveDefaults_U32Fx
}

func (x *PrimitiveDefaults) GetU64F() uint64 {
	if x != nil && x.U64F != nil {
		return *x.U64F
	}
	return Default_PrimitiveDefaults_U64F
}

func (x *PrimitiveDefaults) GetU64Fx() uint64 {
	if x != nil && x.U64Fx != nil {
		return *x.U64Fx
	}
	return Default_PrimitiveDefaults_U64Fx
}

type StringAndBytesDefaults struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Dq               *string                `protobuf:"bytes,1,opt,name=dq,def=this is a string with \"nested quotes\"" json:"dq,omitempty"`
	Sq               *string                `protobuf:"bytes,2,opt,name=sq,def=this is a string with \"nested quotes\"" json:"sq,omitempty"`
	EscapedBytes     []byte                 `protobuf:"bytes,3,opt,name=escaped_bytes,json=escapedBytes,def=\\000\\001\\007\\010\\014\\n\\r\\t\\013\\\\\\'\\\"\\376" json:"escaped_bytes,omitempty"`
	Utf8String       *string                `protobuf:"bytes,4,opt,name=utf8_string,json=utf8String,def=ሴ" json:"utf8_string,omitempty"` // this is utf-8 for \u1234
	StringWithZero   *string                `protobuf:"bytes,5,opt,name=string_with_zero,json=stringWithZero,def=hel\x00lo" json:"string_with_zero,omitempty"`
	BytesWithZero    []byte                 `protobuf:"bytes,6,opt,name=bytes_with_zero,json=bytesWithZero,def=wor\\000ld" json:"bytes_with_zero,omitempty"`
	ReallyLongString *string                `protobuf:"bytes,7,opt,name=really_long_string,json=reallyLongString,def=this is a really long string constant, so it spans multiple lines! it also tests support for multi-line string literals in option values" json:"really_long_string,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for StringAndBytesDefaults fields.
const (
	Default_StringAndBytesDefaults_Dq               = string("this is a string with \"nested quotes\"")
	Default_StringAndBytesDefaults_Sq               = string("this is a string with \"nested quotes\"")
	Default_StringAndBytesDefaults_Utf8String       = string("ሴ")
	Default_StringAndBytesDefaults_StringWithZero   = string("hel\x00lo")
	Default_StringAndBytesDefaults_ReallyLongString = string("this is a really long string constant, so it spans multiple lines! it also tests support for multi-line string literals in option values")
)

// Default values for StringAndBytesDefaults fields.
var (
	Default_StringAndBytesDefaults_EscapedBytes  = []byte("\x00\x01\a\b\f\n\r\t\v\\'\"\xfe")
	Default_StringAndBytesDefaults_BytesWithZero = []byte("wor\x00ld")
)

func (x *StringAndBytesDefaults) Reset() {
	*x = StringAndBytesDefaults{}
	mi := &file_desc_test_defaults_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringAndBytesDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringAndBytesDefaults) ProtoMessage() {}

func (x *StringAndBytesDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test_defaults_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringAndBytesDefaults.ProtoReflect.Descriptor instead.
func (*StringAndBytesDefaults) Descriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{1}
}

func (x *StringAndBytesDefaults) GetDq() string {
	if x != nil && x.Dq != nil {
		return *x.Dq
	}
	return Default_StringAndBytesDefaults_Dq
}

func (x *StringAndBytesDefaults) GetSq() string {
	if x != nil && x.Sq != nil {
		return *x.Sq
	}
	return Default_StringAndBytesDefaults_Sq
}

func (x *StringAndBytesDefaults) GetEscapedBytes() []byte {
	if x != nil && x.EscapedBytes != nil {
		return x.EscapedBytes
	}
	return append([]byte(nil), Default_StringAndBytesDefaults_EscapedBytes...)
}

func (x *StringAndBytesDefaults) GetUtf8String() string {
	if x != nil && x.Utf8String != nil {
		return *x.Utf8String
	}
	return Default_StringAndBytesDefaults_Utf8String
}

func (x *StringAndBytesDefaults) GetStringWithZero() string {
	if x != nil && x.StringWithZero != nil {
		return *x.StringWithZero
	}
	return Default_StringAndBytesDefaults_StringWithZero
}

func (x *StringAndBytesDefaults) GetBytesWithZero() []byte {
	if x != nil && x.BytesWithZero != nil {
		return x.BytesWithZero
	}
	return append([]byte(nil), Default_StringAndBytesDefaults_BytesWithZero...)
}

func (x *StringAndBytesDefaults) GetReallyLongString() string {
	if x != nil && x.ReallyLongString != nil {
		return *x.ReallyLongString
	}
	return Default_StringAndBytesDefaults_ReallyLongString
}

type EnumDefaults struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Red           *Color                 `protobuf:"varint,1,opt,name=red,enum=testprotos.Color,def=0" json:"red,omitempty"`
	Green         *Color                 `protobuf:"varint,2,opt,name=green,enum=testprotos.Color,def=1" json:"green,omitempty"`
	Blue          *Color                 `protobuf:"varint,3,opt,name=blue,enum=testprotos.Color,def=2" json:"blue,omitempty"`
	Zero          *Number                `protobuf:"varint,4,opt,name=zero,enum=testprotos.Number,def=0" json:"zero,omitempty"`
	Zed           *Number                `protobuf:"varint,5,opt,name=zed,enum=testprotos.Number,def=0" json:"zed,omitempty"`
	One           *Number                `protobuf:"varint,6,opt,name=one,enum=testprotos.Number,def=1" json:"one,omitempty"`
	Dos           *Number                `protobuf:"varint,7,opt,name=dos,enum=testprotos.Number,def=2" json:"dos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for EnumDefaults fields.
const (
	Default_EnumDefaults_Red   = Color_RED
	Default_EnumDefaults_Green = Color_GREEN
	Default_EnumDefaults_Blue  = Color_BLUE
	Default_EnumDefaults_Zero  = Number_ZERO
	Default_EnumDefaults_Zed   = Number_ZED
	Default_EnumDefaults_One   = Number_ONE
	Default_EnumDefaults_Dos   = Number_DOS
)

func (x *EnumDefaults) Reset() {
	*x = EnumDefaults{}
	mi := &file_desc_test_defaults_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumDefaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumDefaults) ProtoMessage() {}

func (x *EnumDefaults) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test_defaults_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumDefaults.ProtoReflect.Descriptor instead.
func (*EnumDefaults) Descriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{2}
}

func (x *EnumDefaults) GetRed() Color {
	if x != nil && x.Red != nil {
		return *x.Red
	}
	return Default_EnumDefaults_Red
}

func (x *EnumDefaults) GetGreen() Color {
	if x != nil && x.Green != nil {
		return *x.Green
	}
	return Default_EnumDefaults_Green
}

func (x *EnumDefaults) GetBlue() Color {
	if x != nil && x.Blue != nil {
		return *x.Blue
	}
	return Default_EnumDefaults_Blue
}

func (x *EnumDefaults) GetZero() Number {
	if x != nil && x.Zero != nil {
		return *x.Zero
	}
	return Default_EnumDefaults_Zero
}

func (x *EnumDefaults) GetZed() Number {
	if x != nil && x.Zed != nil {
		return *x.Zed
	}
	return Default_EnumDefaults_Zed
}

func (x *EnumDefaults) GetOne() Number {
	if x != nil && x.One != nil {
		return *x.One
	}
	return Default_EnumDefaults_One
}

func (x *EnumDefaults) GetDos() Number {
	if x != nil && x.Dos != nil {
		return *x.Dos
	}
	return Default_EnumDefaults_Dos
}

type MoarFloats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             *float32               `protobuf:"fixed32,1,opt,name=a,def=1" json:"a,omitempty"`
	B             *float32               `protobuf:"fixed32,2,opt,name=b,def=1" json:"b,omitempty"`
	C             *float32               `protobuf:"fixed32,3,opt,name=c,def=1.01" json:"c,omitempty"`
	D             *float32               `protobuf:"fixed32,4,opt,name=d,def=0.1" json:"d,omitempty"`
	E             *float32               `protobuf:"fixed32,5,opt,name=e,def=100000" json:"e,omitempty"`
	F             *float32               `protobuf:"fixed32,6,opt,name=f,def=1e-05" json:"f,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for MoarFloats fields.
const (
	Default_MoarFloats_A = float32(1)
	Default_MoarFloats_B = float32(1)
	Default_MoarFloats_C = float32(1.0099999904632568)
	Default_MoarFloats_D = float32(0.10000000149011612)
	Default_MoarFloats_E = float32(100000)
	Default_MoarFloats_F = float32(9.999999747378752e-06)
)

func (x *MoarFloats) Reset() {
	*x = MoarFloats{}
	mi := &file_desc_test_defaults_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoarFloats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoarFloats) ProtoMessage() {}

func (x *MoarFloats) ProtoReflect() protoreflect.Message {
	mi := &file_desc_test_defaults_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoarFloats.ProtoReflect.Descriptor instead.
func (*MoarFloats) Descriptor() ([]byte, []int) {
	return file_desc_test_defaults_proto_rawDescGZIP(), []int{3}
}

func (x *MoarFloats) GetA() float32 {
	if x != nil && x.A != nil {
		return *x.A
	}
	return Default_MoarFloats_A
}

func (x *MoarFloats) GetB() float32 {
	if x != nil && x.B != nil {
		return *x.B
	}
	return Default_MoarFloats_B
}

func (x *MoarFloats) GetC() float32 {
	if x != nil && x.C != nil {
		return *x.C
	}
	return Default_MoarFloats_C
}

func (x *MoarFloats) GetD() float32 {
	if x != nil && x.D != nil {
		return *x.D
	}
	return Default_MoarFloats_D
}

func (x *MoarFloats) GetE() float32 {
	if x != nil && x.E != nil {
		return *x.E
	}
	return Default_MoarFloats_E
}

func (x *MoarFloats) GetF() float32 {
	if x != nil && x.F != nil {
		return *x.F
	}
	return Default_MoarFloats_F
}

var File_desc_test_defaults_proto protoreflect.FileDescriptor

const file_desc_test_defaults_proto_rawDesc = "" +
	"\n" +
	"\x18desc_test_defaults.proto\x12\n" +
	"testprotos\"\xad\n" +
	"\n" +
	"\x11PrimitiveDefaults\x12\x1b\n" +
	"\x04fl32\x18\x01 \x01(\x02:\a3.14159R\x04fl32\x12\x1b\n" +
	"\x04fl64\x18\x02 \x01(\x01:\a3.14159R\x04fl64\x12\"\n" +
	"\x05fl32d\x18\x03 \x01(\x02:\f6.022141e+23R\x05fl32d\x12%\n" +
	"\x05fl64d\x18\x04 \x01(\x01:\x0f6.022140857e+23R\x05fl64d\x12\x1d\n" +
	"\afl32inf\x18\x05 \x01(\x02:\x03infR\afl32inf\x12\x1d\n" +
	"\afl64inf\x18\x06 \x01(\x01:\x03infR\afl64inf\x12$\n" +
	"\n" +
	"fl32negInf\x18\a \x01(\x02:\x04-infR\n" +
	"fl32negInf\x12$\n" +
	"\n" +
	"fl64negInf\x18\b \x01(\x01:\x04-infR\n" +
	"fl64negInf\x12\x1d\n" +
	"\afl32nan\x18\t \x01(\x02:\x03nanR\afl32nan\x12\x1d\n" +
	"\afl64nan\x18\n" +
	" \x01(\x01:\x03nanR\afl64nan\x12\x16\n" +
	"\x03bl1\x18\v \x01(\b:\x04trueR\x03bl1\x12\x17\n" +
	"\x03bl2\x18\f \x01(\b:\x05falseR\x03bl2\x12\x17\n" +
	"\x03i32\x18\r \x01(\x05:\x0510101R\x03i32\x12\x1a\n" +
	"\x04i32n\x18\x0e \x01(\x05:\x06-10101R\x04i32n\x12\x1a\n" +
	"\x04i32x\x18\x0f \x01(\x05:\x06131586R\x04i32x\x12\x1d\n" +
	"\x05i32xn\x18\x10 \x01(\x05:\a-131586R\x05i32xn\x12\x17\n" +
	"\x03i64\x18\x11 \x01(\x03:\x0510101R\x03i64\x12\x1a\n" +
	"\x04i64n\x18\x12 \x01(\x03:\x06-10101R\x04i64n\x12\x1a\n" +
	"\x04i64x\x18\x13 \x01(\x03:\x06131586R\x04i64x\x12\x1d\n" +
	"\x05i64xn\x18\x14 \x01(\x03:\a-131586R\x05i64xn\x12\x19\n" +
	"\x04i32s\x18\x15 \x01(\x11:\x0510101R\x04i32s\x12\x1c\n" +
	"\x05i32sn\x18\x16 \x01(\x11:\x06-10101R\x05i32sn\x12\x1c\n" +
	"\x05i32sx\x18\x17 \x01(\x11:\x06131586R\x05i32sx\x12\x1f\n" +
	"\x06i32sxn\x18\x18 \x01(\x11:\a-131586R\x06i32sxn\x12\x19\n" +
	"\x04i64s\x18\x19 \x01(\x12:\x0510101R\x04i64s\x12\x1c\n" +
	"\x05i64sn\x18\x1a \x01(\x12:\x06-10101R\x05i64sn\x12\x1c\n" +
	"\x05i64sx\x18\x1b \x01(\x12:\x06131586R\x05i64sx\x12\x1f\n" +
	"\x06i64sxn\x18\x1c \x01(\x12:\a-131586R\x06i64sxn\x12\x19\n" +
	"\x04i32f\x18\x1d \x01(\x0f:\x0510101R\x04i32f\x12\x1c\n" +
	"\x05i32fn\x18\x1e \x01(\x0f:\x06-10101R\x05i32fn\x12\x1c\n" +
	"\x05i32fx\x18\x1f \x01(\x0f:\x06131586R\x05i32fx\x12\x1f\n" +
	"\x06i32fxn\x18  \x01(\x0f:\a-131586R\x06i32fxn\x12\x19\n" +
	"\x04i64f\x18! \x01(\x10:\x0510101R\x04i64f\x12\x1c\n" +
	"\x05i64fn\x18\" \x01(\x10:\x06-10101R\x05i64fn\x12\x1c\n" +
	"\x05i64fx\x18# \x01(\x10:\x06131586R\x05i64fx\x12\x1f\n" +
	"\x06i64fxn\x18$ \x01(\x10:\a-131586R\x06i64fxn\x12\x17\n" +
	"\x03u32\x18% \x01(\r:\x0510101R\x03u32\x12\x1a\n" +
	"\x04u32x\x18& \x01(\r:\x06131586R\x04u32x\x12\x17\n" +
	"\x03u64\x18' \x01(\x04:\x0510101R\x03u64\x12\x1a\n" +
	"\x04u64x\x18( \x01(\x04:\x06131586R\x04u64x\x12\x19\n" +
	"\x04u32f\x18) \x01(\a:\x0510101R\x04u32f\x12\x1c\n" +
	"\x05u32fx\x18* \x01(\a:\x06131586R\x05u32fx\x12\x19\n" +
	"\x04u64f\x18+ \x01(\x06:\x0510101R\x04u64f\x12\x1c\n" +
	"\x05u64fx\x18, \x01(\x06:\x06131586R\x05u64fx\"\x9a\x04\n" +
	"\x16StringAndBytesDefaults\x125\n" +
	"\x02dq\x18\x01 \x01(\t:%this is a string with \"nested quotes\"R\x02dq\x125\n" +
	"\x02sq\x18\x02 \x01(\t:%this is a string with \"nested quotes\"R\x02sq\x12M\n" +
	"\rescaped_bytes\x18\x03 \x01(\f:(\\000\\001\\007\\010\\014\\n\\r\\t\\013\\\\\\'\\\"\\376R\fescapedBytes\x12$\n" +
	"\vutf8_string\x18\x04 \x01(\t:\x03ሴR\n" +
	"utf8String\x120\n" +
	"\x10string_with_zero\x18\x05 \x01(\t:\x06hel\x00loR\x0estringWithZero\x121\n" +
	"\x0fbytes_with_zero\x18\x06 \x01(\f:\twor\\000ldR\rbytesWithZero\x12\xb7\x01\n" +
	"\x12really_long_string\x18\a \x01(\t:\x88\x01this is a really long string constant, so it spans multiple lines! it also tests support for multi-line string literals in option valuesR\x10reallyLongString\"\xc4\x02\n" +
	"\fEnumDefaults\x12(\n" +
	"\x03red\x18\x01 \x01(\x0e2\x11.testprotos.Color:\x03REDR\x03red\x12.\n" +
	"\x05green\x18\x02 \x01(\x0e2\x11.testprotos.Color:\x05GREENR\x05green\x12+\n" +
	"\x04blue\x18\x03 \x01(\x0e2\x11.testprotos.Color:\x04BLUER\x04blue\x12,\n" +
	"\x04zero\x18\x04 \x01(\x0e2\x12.testprotos.Number:\x04ZEROR\x04zero\x12)\n" +
	"\x03zed\x18\x05 \x01(\x0e2\x12.testprotos.Number:\x03ZEDR\x03zed\x12)\n" +
	"\x03one\x18\x06 \x01(\x0e2\x12.testprotos.Number:\x03ONER\x03one\x12)\n" +
	"\x03dos\x18\a \x01(\x0e2\x12.testprotos.Number:\x03DOSR\x03dos\"\x80\x01\n" +
	"\n" +
	"MoarFloats\x12\x0f\n" +
	"\x01a\x18\x01 \x01(\x02:\x011R\x01a\x12\x0f\n" +
	"\x01b\x18\x02 \x01(\x02:\x011R\x01b\x12\x12\n" +
	"\x01c\x18\x03 \x01(\x02:\x041.01R\x01c\x12\x11\n" +
	"\x01d\x18\x04 \x01(\x02:\x030.1R\x01d\x12\x14\n" +
	"\x01e\x18\x05 \x01(\x02:\x06100000R\x01e\x12\x13\n" +
	"\x01f\x18\x06 \x01(\x02:\x051e-05R\x01f*%\n" +
	"\x05Color\x12\a\n" +
	"\x03RED\x10\x00\x12\t\n" +
	"\x05GREEN\x10\x01\x12\b\n" +
	"\x04BLUE\x10\x02*V\n" +
	"\x06Number\x12\b\n" +
	"\x04ZERO\x10\x00\x12\a\n" +
	"\x03ZED\x10\x00\x12\a\n" +
	"\x03NIL\x10\x00\x12\b\n" +
	"\x04NULL\x10\x00\x12\a\n" +
	"\x03ONE\x10\x01\x12\a\n" +
	"\x03UNO\x10\x01\x12\a\n" +
	"\x03TWO\x10\x02\x12\a\n" +
	"\x03DOS\x10\x02\x1a\x02\x10\x01B6Z4github.com/jhump/protoreflect/v2/internal/testprotos"

var (
	file_desc_test_defaults_proto_rawDescOnce sync.Once
	file_desc_test_defaults_proto_rawDescData []byte
)

func file_desc_test_defaults_proto_rawDescGZIP() []byte {
	file_desc_test_defaults_proto_rawDescOnce.Do(func() {
		file_desc_test_defaults_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_desc_test_defaults_proto_rawDesc), len(file_desc_test_defaults_proto_rawDesc)))
	})
	return file_desc_test_defaults_proto_rawDescData
}

var file_desc_test_defaults_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_desc_test_defaults_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_desc_test_defaults_proto_goTypes = []any{
	(Color)(0),                     // 0: testprotos.Color
	(Number)(0),                    // 1: testprotos.Number
	(*PrimitiveDefaults)(nil),      // 2: testprotos.PrimitiveDefaults
	(*StringAndBytesDefaults)(nil), // 3: testprotos.StringAndBytesDefaults
	(*EnumDefaults)(nil),           // 4: testprotos.EnumDefaults
	(*MoarFloats)(nil),             // 5: testprotos.MoarFloats
}
var file_desc_test_defaults_proto_depIdxs = []int32{
	0, // 0: testprotos.EnumDefaults.red:type_name -> testprotos.Color
	0, // 1: testprotos.EnumDefaults.green:type_name -> testprotos.Color
	0, // 2: testprotos.EnumDefaults.blue:type_name -> testprotos.Color
	1, // 3: testprotos.EnumDefaults.zero:type_name -> testprotos.Number
	1, // 4: testprotos.EnumDefaults.zed:type_name -> testprotos.Number
	1, // 5: testprotos.EnumDefaults.one:type_name -> testprotos.Number
	1, // 6: testprotos.EnumDefaults.dos:type_name -> testprotos.Number
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_desc_test_defaults_proto_init() }
func file_desc_test_defaults_proto_init() {
	if File_desc_test_defaults_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_desc_test_defaults_proto_rawDesc), len(file_desc_test_defaults_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_desc_test_defaults_proto_goTypes,
		DependencyIndexes: file_desc_test_defaults_proto_depIdxs,
		EnumInfos:         file_desc_test_defaults_proto_enumTypes,
		MessageInfos:      file_desc_test_defaults_proto_msgTypes,
	}.Build()
	File_desc_test_defaults_proto = out.File
	file_desc_test_defaults_proto_goTypes = nil
	file_desc_test_defaults_proto_depIdxs = nil
}
